@*@model IEnumerable<AlabanzaPage.Models.Cancion>*@
@using PagedList.Mvc;
@model PagedList.IPagedList<AlabanzaPage.Models.Cancion>
@{
    ViewBag.Title = "Listado Canción";
    Layout = "~/Views/Shared/_Layout.cshtml";    
}
 
<h2>Listado Canciones</h2>

@using (Html.BeginForm("Index", "Cancion", FormMethod.Get))
{
    <p>
        Buscar: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
} 
<table class="table table-bordered table-striped table-hover">
    <tr>
        <th>
            @Html.ActionLink("Nombre", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Tipo
        </th>
        <th>
            @Html.ActionLink("Ultima Vez", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>Opciones</th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Tipo)
            </td>                        
            <td>
                @Html.DisplayFor(modelItem => item.UltimaVez)
            </td>
            <td>
                <div class="btn-group">
                    <button type="button" class="btn btn-xs btn-default dropdown-toggle glyphicon glyphicon-cog" data-toggle="dropdown"><span class="caret"></span>
                    </button>

                    <ul class="dropdown-menu">
                        <li>@Html.ActionLink("Edit", "Edit", new { id = item.Id })</li>
                        <li role="presentation" class="divider"></li>
                        <li>@Html.ActionLink("Letra", "VerLetra", new { id = item.Id }) </li>
                        <li>@Html.ActionLink("Acordes", "VerAcordes", new { id = item.Id })</li>
                    </ul>
                </div>
            </td>
        </tr>
    }
</table>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })) 